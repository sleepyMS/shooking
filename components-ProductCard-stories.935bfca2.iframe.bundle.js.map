{"version":3,"file":"components-ProductCard-stories.935bfca2.iframe.bundle.js","mappings":";AAQA;;;;;;;;;;;AAWA;;;;;AAOA;;;;;AAOA;;;;AAMA;AACA;;AAIA;;;AAGA;;;;AAMA;AACA;;;AAKA;;;AAKA;AACA;;;;;;;;;;;AAWA;;;AAKA","sources":["webpack://shooking/./src/components/ProductCard.js"],"sourcesContent":["// src/components/ProductCard.js\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useCart } from \"../context/CartContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CardContainer = styled.div`\n  background-color: ${({ theme }) => theme.cardBg};\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst ProductImage = styled.img`\n  width: 100%;\n  height: auto;\n  aspect-ratio: 1 / 1;\n  object-fit: cover;\n`;\n\nconst InfoContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nconst Brand = styled.h2`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 0 0 4px 0;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Description = styled.p`\n  font-size: 14px;\n  color: ${({ theme }) => theme.subText};\n  margin: 0 0 12px 0;\n  flex-grow: 1;\n`;\n\nconst Price = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0 0 16px 0;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst AddToCartButton = styled.button`\n  flex: 1;\n  padding: 12px;\n  background-color: ${({ theme }) => theme.buttonBg};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst PurchaseButton = styled(AddToCartButton)`\n  background-color: #ffda00;\n  color: #111111;\n`;\n\nconst ProductCard = ({ product }) => {\n  const { addToCart } = useCart();\n  const navigate = useNavigate();\n\n  const handlePurchase = () => {\n    const shippingFee = product.price >= 100000 ? 0 : 3000;\n    const totalAmount = product.price + shippingFee;\n\n    // 단일 상품 정보를 state로 전달\n    navigate(\"/my-cards\", {\n      state: {\n        cartItems: [product],\n        totalAmount,\n        isDirectPurchase: true,\n      },\n    });\n  };\n\n  return (\n    <CardContainer>\n      <ProductImage src={product.image} alt={product.name} />\n      <InfoContainer>\n        <Brand>{product.brand}</Brand>\n        <Description>{product.description}</Description>\n        <Price>{product.price.toLocaleString()}원</Price>\n        <ButtonWrapper>\n          <AddToCartButton onClick={() => addToCart(product)}>\n            담기\n          </AddToCartButton>\n          <PurchaseButton onClick={handlePurchase}>구매</PurchaseButton>\n        </ButtonWrapper>\n      </InfoContainer>\n    </CardContainer>\n  );\n};\n\nexport default ProductCard;\n"],"names":[],"sourceRoot":""}